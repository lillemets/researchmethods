x <- rnorm(100, 0, 1)
y <- sqrt(x) + rnorm(100, 0, 5)
plot(x, y, #axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
?runif
x <- runif(100, 0, 100)
y <- sqrt(x) #+ rnorm(100, 0, 5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- sqrt(x) + rnorm(100, 0, 5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- sqrt(x) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- rnorm(100, 0, 100)
x <- x[x>0]
y <- sqrt(x) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- sqrt(x) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 10)
y <- sqrt(x) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 10)
y <- sqrt(x) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- sqrt(x) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
?sqrt
x <- runif(100, 0, 100)
y <-x^1/3 + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^1/2 + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/2) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/3) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/4) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 1)
y <-x^(1/4) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 1)
y <-x^(1/4) + rnorm(100, 0, .01)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/3) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/2) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/10) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/3) + rnorm(100, 0, .1)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <-x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- 100 * x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
par(bty = 'n', family = 'RobotoCondensed')
plot(cars, xlab = "Speed, mph", ylab = "Stopping distance, ft",
main = paste("Pearson's r = ", cor(cars)[2] %>% round(3)))
par(bty = 'n', family = 'RobotoCondensed')
set.seed(123)
x <- rnorm(100, 100)
y <- x + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
x <- runif(100, 0, 100)
y <- 100 * x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
x <- runif(100, 0, 100)
y <- x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
par(bty = 'n', family = 'RobotoCondensed')
set.seed(123)
x <- rnorm(100, 100)
y <- x + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
x <- runif(100, 0, 100)
y <- x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3) ))
head(swiss)
cor(swiss)
par(bty = 'n', family = 'RobotoCondensed')
pheatmap::pheatmap(cor(swiss), cluster_rows = F, cluster_cols = F)
par(bty = 'n', family = 'RobotoCondensed')
pheatmap::pheatmap(cor(swiss))
# Libraries
library('DiagrammeR')
grViz("digraph {rankdir=LR; node [shape = circle] X -> Y}")
grViz("digraph {rankdir=LR; node [shape = circle] X -> Y [dir=none]; Z -> X; Z -> Y}")
Oie <- read.table(header = T, text = '
x1	y1		x2	y2		x3	y3		x4	y4
10	8.04		10	9.14		10	7.46		8	6.58
8	6.95		8	8.14		8	6.77		8	5.76
13	7.58		13	8.74		13	12.74		8	7.71
9	8.81		9	8.77		9	7.11		8	8.84
11	8.33		11	9.26		11	7.81		8	8.47
14	9.96		14	8.1		14	8.84		8	7.04
6	7.24		6	6.13		6	6.08		8	5.25
4	4.26		4	3.1		4	5.39		19	12.5
12	10.84		12	9.13		12	8.15		8	5.56
7	4.82		7	7.26		7	6.42		8	7.91
5	5.68		5	4.74		5	5.73		8	6.89')
Oie
Oie <- read.table(header = T, text = '
x1	y1		x2	y2		x3	y3		x4	y4
10	8.04		10	9.14		10	7.46		8	6.58
8	6.95		8	8.14		8	6.77		8	5.76
13	7.58		13	8.74		13	12.74		8	7.71
9	8.81		9	8.77		9	7.11		8	8.84
11	8.33		11	9.26		11	7.81		8	8.47
14	9.96		14	8.1		14	8.84		8	7.04
6	7.24		6	6.13		6	6.08		8	5.25
4	4.26		4	3.1		4	5.39		19	12.5
12	10.84		12	9.13		12	8.15		8	5.56
7	4.82		7	7.26		7	6.42		8	7.91
5	5.68		5	4.74		5	5.73		8	6.89')
Oie
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (1:4) {
plot(Oie[, grep(i, names(Oie))])
}
for (1:4) {
plot(Oie[, grep(i, names(Oie))])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
plot(Oie[, grep(i, names(Oie))])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp) %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman') %>% round(3)))
}
main = paste(
"Pearson's r = ", cor(temp) %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman') %>% round(3))
paste(
"Pearson's r = ", cor(temp) %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman') %>% round(3))
temp
cor(temp)
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(lm(temp))
}
lm(temp)
abline(lm(temp))
temp
lm(speed)
lm(cars)
Oie[, grep(i, names(Oie))]
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
head(cars, 10)
par(bty = 'n', family = 'RobotoCondensed')
x <- runif(100, 0, 100)
y <- x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA, cex = 2,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
par(bty = 'n', family = 'RobotoCondensed')
x <- runif(100, 0, 100)
y <- x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA, pt.cex = 2,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
par(bty = 'n', family = 'RobotoCondensed')
x <- runif(100, 0, 100)
y <- x^(1/3) + rnorm(100, 0, .5)
plot(x, y, axes = F, xlab = NA, ylab = NA, cex.main = 2,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
par(bty = 'n', family = 'RobotoCondensed', cex = 2)
pheatmap::pheatmap(cor(swiss))
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2), mar = c(0,0,0,0))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2), mar = c(1,1,0,0))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2), mar = c(2,2,0,0))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2), mar = c(2,2,2,0))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,2), mar = c(2,2,2,0))
for (i in 1:4) {
temp <- Oie[, grep(i, names(Oie))]
plot(temp,
main = paste(
"Pearson's r = ", cor(temp)[2] %>% round(3), "\n",
"Spearman's r = ", cor(temp, method = 'spearman')[2] %>% round(3)))
abline(0, cor(temp)[2])
}
grViz("digraph {rankdir=LR; node [shape = circle] X -> Y}", width = 100)
params <- rnorm(100, c(-1, 1), c(.1, .5, 1))
params
c(-1, 1)
?replicate
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(3,2))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, i, j)
plot(x, y, axes = F, xlab = NA, ylab = NA, cex.main = 2,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(3,2))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, i, j)
plot(x, y, axes = F, xlab = NA, ylab = NA, cex.main = 2,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(3,2))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, i, j)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,3))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, 0, j)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,3))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x + rnorm(100, 0, j) * i
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,3))
for (i in c(-1, 1)) {
for (j in c(.1, .5, 1)) {
x <- rnorm(100, 0, 1)
y <- x * i + rnorm(100, 0, j)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
par(bty = 'n', family = 'RobotoCondensed', mfrow = c(2,3))
for (i in c(-1, 1)) {
for (j in c(1, .5, .1)) {
x <- rnorm(100, 0, 1)
y <- x * i + rnorm(100, 0, j)
plot(x, y, axes = F, xlab = NA, ylab = NA,
main = paste(
"Pearson's r = ", cor(x, y) %>% round(3), "\n",
"Spearman's r = ", cor(x, y, method = 'spearman') %>% round(3)))
}
}
install.packages('rmarkdown')
unlink('slides/08_regression_cache', recursive = TRUE)
par(pty = 's')plot(weight2 ~ weight1, calves, xlab = "1st weight", ylab = "2nd weight")
lines(calves$weight1,
predict(wtMod, data.frame(weight1 = calves$weight1)),
col = 'tomato', lwd = 2)predWt <- function(x)
predict(wtMod, list(weight1 = x))
lines(c(700, 800), c(predWt(700), predWt(700)))
lines(c(800, 800), c(predWt(700), predWt(800)), col = 'steelblue', lwd = 5)
par(pty = 's')plot(weight2 ~ weight1, calves, xlab = "1st weight", ylab = "2nd weight")
lines(calves$weight1,
predict(wtMod, data.frame(weight1 = calves$weight1)),
col = 'tomato', lwd = 2)predWt <- function(x)
predict(wtMod, list(weight1 = x))
lines(c(700, 800), c(predWt(700), predWt(700)))
lines(c(800, 800), c(predWt(700), predWt(800)), col = 'steelblue', lwd = 5)
?agridat::urquhart.feedlot
plotWeights <- function() {
plot(weight2 ~ weight1, calves, xlab = "1st weight, ?", ylab = "2nd weight, ?")
}
plotWeights
plotWeights(xlim = c(0, max(calves$weight1)), ylim = c(0, max(calves$weight2)))
wtMod <- lm(weight2 ~ weight1, calves)
# Settings
knitr::opts_chunk$set(echo = F, warning = F, dpi = 150, fig.height = 4)
# Load packages
library('magrittr');library('knitr')
# Set colors
Col <- c(red = '#e6457a', green = '#b0e645', blue = '#45cbe6')
calves <- agridat::urquhart.feedlot
head(calves, 3)
plotWeights <- function(...) {
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plot(weight2 ~ weight1, calves, xlab = "1st weight", ylab = "2nd weight",
las = 2, ...)
}
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plotWeights()
wtMod <- lm(weight2 ~ weight1, calves)
wtModOpposite <- lm(weight1 ~ weight2, calves)
plotWeights()
lines(calves$weight1,
predict(wtMod, data.frame(weight1 = calves$weight1)),
col = Col['red'], lwd = 2)
lines(calves$weight2,
predict(wtModOpposite, data.frame(weight2 = calves$weight2)),
col = Col['blue'], lwd = 2)
calves$weight2
lines(predict(wtModOpposite, data.frame(weight2 = calves$weight2)),
calves$weight2,
col = Col['blue'], lwd = 2)
plotWeights <- function(...) {
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plot(weight2 ~ weight1, calves, xlab = "1st weight", ylab = "2nd weight",
las = 3, ...)
}
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plotWeights()
plotWeights <- function(...) {
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plot(weight2 ~ weight1, calves, xlab = "1st weight", ylab = "2nd weight",
las = 1, ...)
}
par(bty = 'n', mar = c(4,4,0,0), family = 'RobotoCondensed')
plotWeights()
par(bty = 'n', mar = c(4,4,1,0), family = 'RobotoCondensed')
hist(wtMod$residuals, 30)
plotWeights()
lines(calves$weight1,
predict(wtMod, data.frame(weight1 = calves$weight1)),
col = Col['red'], lwd = 2)
for (i in 1:nrow(calves)) {
lines(c(calves$weight1[i], calves$weight1[i]),
c(calves$weight2[i], predWt(calves$weight1[i])),
col = Col['blue'], lwd = 2)
}
